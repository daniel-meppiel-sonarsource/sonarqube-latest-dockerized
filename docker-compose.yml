version: '3.7'

# for official docker image (8.2+)
services:
  ngrok_sq:
    container_name: ngrok_sq
    ports:
      - "4040:4040"
    image: wernight/ngrok:latest
    depends_on:
      - reverse_proxy
    env_file:
      - .env
    command: ['ngrok', 'start', '--all', '-authtoken=${NGROK_AUTH_TOKEN}']
    volumes:
      -
          type: 'bind'
          source: './ngrok.yml'
          target: '/home/ngrok/.ngrok2/ngrok.yml'
          consistency: 'delegated'
          read_only: true

  reverse_proxy:
    container_name: reverse_proxy
    hostname: reverse_proxy
    image: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - sq-8-ee
    volumes:
      - ./reverse_proxy/nginx:/etc/nginx
      - ./reverse_proxy/certs:/etc/ssl/private

  sq-8-ee:
    image: sonarqube:latest
    ports:
    - 9083:9000
    depends_on:
      - db
    environment:
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar8
    volumes:
      - sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube/logs:/opt/sonarqube/logs
      - sonarqube_data:/opt/sonarqube/data

  db:
    image: postgres:12
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar8
    volumes:
      - ./postgres:/var/lib/postgresql/data

  jenkins:
    image: jenkins/jenkins
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
    
volumes:
  sonarqube_extensions:
    name: sonarqube_extensions
  sonarqube_data:
    name: sonarqube_data
  jenkins_home:
    name: jenkins_home
