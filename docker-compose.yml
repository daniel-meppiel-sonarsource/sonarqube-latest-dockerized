version: '3.7'

# for official docker image (8.2+)
services:
  ngrok_sq:
    container_name: ngrok_sq
    ports:
      - "4040:4040"
    image: wernight/ngrok:latest
    depends_on:
      - reverse_proxy
    command: ['ngrok', 'start', '--all', '-authtoken=1cO6ViKnTOmEKNGQcnkSiSWJabG_56poXSAzpjB8jrqF2sP6B']
    volumes:
      -
          type: 'bind'
          source: './ngrok.yml'
          target: '/home/ngrok/.ngrok2/ngrok.yml'
          consistency: 'delegated'
          read_only: true

  reverse_proxy:
    container_name: reverse_proxy
    hostname: reverse_proxy
    image: nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - sq-8-ee
    volumes:
      - ./reverse_proxy/nginx:/etc/nginx
      - ./reverse_proxy/certs:/etc/ssl/private

  sq-8-ee:
    image: sonarqube:8.6-enterprise
    ports:
    - 9083:9000
    depends_on:
      - db
    environment:
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar8
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_extensions:/opt/sonarqube/extensions
      - ./sonarqube-8-ee-docker/logs:/opt/sonarqube/logs
      - sonarqube_data:/opt/sonarqube/data

  db:
    image: postgres:12
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar8
    volumes:
      - ./postgres:/var/lib/postgresql/data

  jenkins:
    image: jenkinsci/blueocean:latest
    container_name: jenkins
    hostname: jenkins
    volumes:
      - type: volume
        source: jenkins-docker-certs
        target: /certs/client
        read_only: true
      - type: volume
        source: jenkins-data
        target: /var/jenkins_home
        read_only: false
      - type: bind
        source: ~/
        target: /home
    ports:
      - 8080:8080

volumes:
  sonarqube_extensions:
    name: sonarqube_extensions
  sonarqube_data:
    name: sonarqube_data
  sonarqube_conf:
    name: sonarqube_conf
  sonarqube_logs:
    name: sonarqube_logs
  jenkins-data:
    name: jenkins-data
    driver: local
    driver_opts:
      type: none
      device: $PWD/jenkins/home
      o: bind
  jenkins-docker-certs:
    name: jenkins-docker-certs